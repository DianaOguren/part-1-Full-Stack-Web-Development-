{"ast":null,"code":"var _jsxFileName = \"/Users/dianaoguren/Documents/part1_React/part_1.6_1.14/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  let all = props.good + props.neutral + props.bad;\n  let avarage = (props.good * 1 + props.neutral * 0 + props.bad * -1) / all;\n  let newValue = isNaN(avarage) ? 0 : avarage;\n  let pos = props.good / all * 100;\n  let positive = isNaN(pos) ? 0 : pos;\n\n  const StatisticLine = ({\n    text,\n    value\n  }) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"\\xA0\", value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good:\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral:\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad:\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"the total number:\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"the average score:\",\n      value: newValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      text: \"the percentage of positive feedback:\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"the total number: \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"the average score: \", newValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"the percentage of positive feedback: \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increaseGood = () => setGood(good + 1);\n\n  const increaseNeutral = () => setNeutral(neutral + 1);\n\n  const increaseBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseGood,\n        children: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseNeutral,\n        children: \"Neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseBad,\n        children: \"Bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/dianaoguren/Documents/part1_React/part_1.6_1.14/src/App.js"],"names":["React","useState","Statistics","props","all","good","neutral","bad","avarage","newValue","isNaN","pos","positive","StatisticLine","text","value","App","setGood","setNeutral","setBad","increaseGood","increaseNeutral","increaseBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,MAAIC,GAAG,GAAGD,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACG,OAAnB,GAA6BH,KAAK,CAACI,GAA7C;AACA,MAAIC,OAAO,GAAG,CAACL,KAAK,CAACE,IAAN,GAAW,CAAX,GAAaF,KAAK,CAACG,OAAN,GAAc,CAA3B,GAA6BH,KAAK,CAACI,GAAN,GAAW,CAAC,CAA1C,IAA8CH,GAA5D;AACA,MAAIK,QAAQ,GAAIC,KAAK,CAACF,OAAD,CAAL,GAAiB,CAAjB,GAAsBA,OAAtC;AACA,MAAIG,GAAG,GAAIR,KAAK,CAACE,IAAN,GAAWD,GAAZ,GAAiB,GAA3B;AACA,MAAIQ,QAAQ,GAAIF,KAAK,CAACC,GAAD,CAAL,GAAa,CAAb,GAAkBA,GAAlC;;AACA,QAAME,aAAa,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,KAAmB;AACvC,wBACE;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,6BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAQD,GATD;;AAYA,MAAIX,GAAG,KAAK,CAAZ,EAAe;AACb,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAGD,KAAK,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,UAApB;AAA+B,MAAA,KAAK,EAAGF,KAAK,CAACG;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAGH,KAAK,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,mBAApB;AAAwC,MAAA,KAAK,EAAGH;AAAhD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,oBAApB;AAAyC,MAAA,KAAK,EAAGK;AAAjD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,sCAArB;AAA4D,MAAA,KAAK,EAAGG;AAApE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,uCAAwBR,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,wCAAyBK,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,0DAA2CG,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;KAAMV,U;;AA2CN,MAAMc,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACX,IAAD,EAAOY,OAAP,IAAkBhB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUY,UAAV,IAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMY,MAAN,IAAgBlB,QAAQ,CAAC,CAAD,CAA9B;;AAGA,QAAMmB,YAAY,GAAG,MAAMH,OAAO,CAACZ,IAAI,GAAG,CAAR,CAAlC;;AACA,QAAMgB,eAAe,GAAG,MAAMH,UAAU,CAACZ,OAAO,GAAG,CAAX,CAAxC;;AACA,QAAMgB,WAAW,GAAG,MAAMH,MAAM,CAACZ,GAAG,GAAG,CAAP,CAAhC;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEa,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEjB,IAAlB;AAAwB,QAAA,OAAO,EAAEC,OAAjC;AAA0C,QAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;GAAMS,G;;MAAAA,G;AA4BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Statistics = (props) => {\n  let all = props.good + props.neutral + props.bad;\n  let avarage = (props.good*1+props.neutral*0+props.bad*(-1))/all;\n  let newValue = (isNaN(avarage) ? 0 : (avarage));\n  let pos = (props.good/all)*100;\n  let positive = (isNaN(pos) ? 0 : (pos));\n  const StatisticLine = ({text, value}) => {\n    return (\n      <>\n        <tr>\n          <td>{text}</td>\n          <td>&nbsp;{value}</td>\n        </tr>\n      </>\n    )\n  }\n  \n\n  if (all === 0) {\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <StatisticLine text=\"good:\" value ={props.good} />\n      <StatisticLine text=\"neutral:\" value ={props.neutral} />\n      <StatisticLine text=\"bad:\" value ={props.bad} />\n      <StatisticLine text=\"the total number:\" value ={all} />\n      <StatisticLine text=\"the average score:\" value ={newValue} />\n      <StatisticsLine text=\"the percentage of positive feedback:\" value ={positive}/>\n      <div>the total number: {all}</div>\n      <div>the average score: {newValue}</div>\n      <div>the percentage of positive feedback: {positive}%</div>\n    </div>\n  );\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n  const increaseGood = () => setGood(good + 1);\n  const increaseNeutral = () => setNeutral(neutral + 1);\n  const increaseBad = () => setBad(bad + 1);\n\n  return (\n    <div>\n      <div className=\"feedback\">\n        <h1>Give feedback</h1>\n        <button onClick={increaseGood}>Good</button>\n        <button onClick={increaseNeutral}>Neutral</button>\n        <button onClick={increaseBad}>Bad</button>\n      </div>\n\n      <div>\n        <Statistics good={good} neutral={neutral} bad={bad}/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}